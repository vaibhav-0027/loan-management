{"version":3,"sources":["helpers/firebase.js","helpers/localStorage.js","screens/Login/index.jsx","routes/AuthRouteSwitch.jsx","helpers/dash_api.js","helpers/action_helper.js","actions/index.js","screens/ApplyLoan/index.jsx","screens/Home/index.jsx","reducers/loanReducer.js","selectors/index.js","screens/ViewLoan/LoanCard.jsx","screens/ViewLoan/DetailModal.jsx","screens/ViewLoan/index.jsx","routes/PrivateRoute.jsx","routes/MainRouteSwitch.jsx","routes/MainRoute.jsx","reducers/index.js","routes/MainApp.jsx","index.js"],"names":["provider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","addScope","auth","getAuth","setUserInfo","info","localStorage","setItem","getUserInfo","getItem","JSON","parse","setUserAccessToken","token","getUserAccessToken","LoginScreen","history","useHistory","useEffect","jwt_decode","email","push","error","console","log","style","height","width","className","Button","cursor","onClick","signInWithPopup","then","result","user","stsTokenManager","accessToken","stringify","catch","errorCode","code","errorMessage","message","credential","credentialFromError","alert","AuthRouteSwitch","exact","path","Login","dash_api","axios","create","baseURL","interceptors","request","use","config","headers","err","Promise","reject","LOADING_STATUS","ReduxAsyncAction","action_namespace","extra_actions","this","constants","str","extra_methods","actions","concat","reduce","acc","action","toUpperCase","Object","assign","generateConstants","progressBar","promiseClosure","args","dispatch","type","apply","data","response","pick","FetchLoans","registerRequest","a","get","FETCH_LOANS","CreateLoanApplication","body","post","init_state","handler","options","CREATE_LOAN_APPLICATION","connect","props","userInfo","useState","name","displayName","address","contact","amount","startDate","endDate","emi","setInfo","amoutn","isTouched","setIsTouched","formClickHandler","e","target","formChangeHandler","value","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","marginLeft","Form","onSubmit","preventDefault","trim","length","validator","isEmail","FormGroup","Label","Input","onChange","invalid","FormFeedback","min","marginRight","Card","borderRadius","background","INIT_STATE","LoanReducer","state","updatedLoans","loadingStatus","loading","selectLoans","createSelector","loanReducer","loans","LoanCard","date","Col","lg","border","paddingLeft","Row","setModalInfo","toggleModal","DetailModal","isOpen","toggle","Modal","ModalHeader","ModalBody","fetchLoans","isModalOpen","setIsModalOpen","modalInfo","map","_current","idx","PrivateRoute","decoded","component","MainRouteSwitch","HomeScreen","ApplyLoanScreen","ViewLoanScreen","MainRoute","Fragment","reducers","app","combineReducers","store","createStore","applyMiddleware","ReduxThunk","MainApp","ReactDOM","render","document","getElementById"],"mappings":"sMAeaA,GAFDC,YAVW,CACnBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKK,IAAIC,KAC5BT,EAASU,SAAS,qDACX,IAAMC,EAAOC,cCjBPC,EAAc,SAACC,GACxBC,aAAaC,QAAQ,WAAYF,IAGxBG,EAAc,WACvB,OAAGF,aAAaG,QAAQ,YACbC,KAAKC,MAAML,aAAaG,QAAQ,aAGpC,MAGEG,EAAqB,SAACC,GAC/BP,aAAaC,QAAQ,kBAAmBM,IAG/BC,EAAqB,WAC9B,GAAGR,aAAaG,QAAQ,mBACpB,OAAOH,aAAaG,QAAQ,oB,wBC6DrBM,EArEK,WAEhB,IAAMC,EAAUC,cAEhBC,qBAAU,WAIN,IACoBC,YAAWL,KAEhBM,QAAUZ,IAAcY,OAC/BJ,EAAQK,KAAK,SAGnB,MAAOC,GACLC,QAAQC,IAAIF,MAGjB,CAACN,IAkCJ,OACI,qBAAKS,MAAO,CAACC,OAAQ,QAASC,MAAO,SAArC,SACI,qBACIC,UAAU,+DADd,SAGI,cAACC,EAAA,EAAD,CACIJ,MAAO,CAACK,OAAQ,WAChBC,QAvCM,WAGlBC,YAAgB9B,EAAMX,GACjB0C,MAAK,SAACC,GAIH,IAAMC,EAAOD,EAAOC,KACdtB,EAAQsB,EAAKC,gBAAgBC,YAGnCjC,EAAYM,KAAK4B,UAAUH,IAC3BvB,EAAmBC,GACnBG,EAAQK,KAAK,YAEdkB,OAAM,SAACjB,GAEN,IAAMkB,EAAYlB,EAAMmB,KAClBC,EAAepB,EAAMqB,QAErBvB,EAAQE,EAAMF,MAEdwB,EAAa5C,IAAmB6C,oBAAoBvB,GAE1DC,QAAQC,IAAIgB,EAAWE,EAActB,EAAOwB,GAE5CE,MAAM,2CAAD,OAA4CJ,QAUjD,uCCtDDK,EAVS,WACpB,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACI,cAACC,EAAD,S,oHCGVC,E,OAAWC,EAAMC,OAAN,aACbC,QAAQ,GAAD,OAHc,wBAGd,SATY,CACnB,OAAU,mBACV,eAAgB,mBAChB,8BAA+B,OAUnCH,EAASI,aAAaC,QAAQC,KAC1B,SAACC,GACG,IAAM7C,EAAQC,IACRqB,EAAO3B,IAAcY,MAU3B,OARGP,IACC6C,EAAOC,QAAP,2BACOD,EAAOC,SADd,IAEI,UAAa9C,EACb,QAAWsB,KAIZuB,KAEX,SAACE,GACG,OAAOC,QAAQC,OAAOF,MAIfT,Q,+BCnCTY,EAEO,EAFPA,EAIK,EAoBEC,EAAb,WAME,WAAYC,EAAkBC,GAAgB,oBAC5CC,KAAKC,UAxBwB,SAC/BC,EACAC,GAEA,IAAMC,EAAUC,iBAAO,CAAC,UAAW,WAAY,SAAUF,GAEzD,OAAOG,iBAAOF,GACZ,SAACG,EAAKC,GAIJ,OAHGA,IACDD,EAAIC,GAAJ,UAAiBN,EAAIO,cAArB,YAAsCD,EAAOC,gBAExCC,OAAOC,OAAO,GAAIJ,KAE3B,IAWiBK,CAAkBd,EAAkBC,GACrDC,KAAKa,aAAc,EARvB,mDAUE,WACEb,KAAKa,aAAc,IAXvB,6BAaE,SAAgBC,GAAiB,IAAD,OAC9Bd,KAAKX,QAAU,WAAc,IAAD,uBAAT0B,EAAS,yBAATA,EAAS,gBAC1B,OAAO,SAACC,GAON,OANAA,EAAS,CAAEC,KAAM,EAAKhB,UAAUZ,UAC5B,EAAKwB,aACPG,EAAS,CAAEC,KAAM,wBAEnB,EAAKD,SAAWA,EAETF,EACJI,MAAM,EAAMH,GACZjD,MAAK,SAACqD,GAKL,OAJAH,EAAS,CAAEC,KAAM,EAAKhB,UAAUmB,SAAUD,SACtC,EAAKN,aACPG,EAAS,CAAEC,KAAM,0BAEZE,KAER/C,OAAM,SAACjB,GAQN,MAPA6D,EAAS,CACPC,KAAM,EAAKhB,UAAU9C,MACrBA,MAAOkE,eAAKlE,EAAO,CAAC,OAAQ,SAAU,gBAAkBA,IAEtD,EAAK0D,aACPG,EAAS,CAAEC,KAAM,uBAEb9D,WAvClB,KCtBamE,EAAa,IAAIzB,EAAiB,eAC/CyB,EAAWC,gBAAX,sBAA2B,sBAAAC,EAAA,+EAChBxC,EAASyC,IAAI,eAAe3D,MAAK,SAACqD,GAAD,OAAUA,MAD3B,4CAGpB,IAAMO,EAAcJ,EAAWrB,UAGzB0B,EAAwB,IAAI9B,EAAiB,2BAC1D8B,EAAsBJ,gBAAtB,uCAAsC,WAAOK,GAAP,SAAAJ,EAAA,+EAC3BxC,EAAS6C,KAAK,eAAgBD,GAAM9D,MAAK,SAACqD,GAAD,OAAUA,MADxB,2CAAtC,uDAGO,ID0DLW,EACAC,EACAC,EC5DWC,EAA0BN,EAAsB1B,UC4O9CiC,eAAQ,MAJI,SAAClB,GAAD,MAAe,CACtCW,sBAAuB,SAACC,GAAD,OAAUZ,EAASW,EAAsBtC,QAAQuC,QAG7DM,EAlPS,SAACC,GAErB,IAAMC,EAAW/F,IACXQ,EAAUC,cAEhB,EAAwBuF,mBAAS,CAC7BC,KAAMF,EAASG,YACfC,QAAS,GACTC,QAAS,GACTxF,MAAOmF,EAASnF,MAChByF,OAAQ,GACRC,UAAW,KACXC,QAAS,KACTC,IAAK,IART,mBAAO3G,EAAP,KAAa4G,EAAb,KAaA,EAAkCT,mBAAS,CACvCC,MAAM,EACNE,SAAS,EACTC,SAAS,EACTxF,OAAO,EACP8F,QAAQ,EACRJ,WAAW,EACXC,SAAS,IAPb,mBAAOI,EAAP,KAAkBC,EAAlB,KAWAlG,qBAAU,WACN,IAAIb,EAAKyG,YAAczG,EAAK0G,SAAW1G,EAAKwG,OAAS,IACjD,OAAOI,EAAQ,2BACR5G,GADO,IAEV2G,IAAK,KAIbC,EAAQ,2BACD5G,GADA,IAEH2G,IAAK,SAEV,CAAC3G,EAAKyG,UAAWzG,EAAK0G,QAAS1G,EAAKwG,SAEvC,IAAMQ,EAAmB,SAACC,GACtBF,EAAa,2BACND,GADK,kBAEPG,EAAEC,OAAOd,MAAO,MAInBe,EAAoB,SAACF,GACvBL,EAAQ,2BACD5G,GADA,kBAEFiH,EAAEC,OAAOd,KAAOa,EAAEC,OAAOE,UA2C9BC,EAAQ,IAAIC,KACZC,EAAKF,EAAMG,UACXC,EAAKJ,EAAMK,WAAa,EACxBC,EAAON,EAAMO,cAYjB,OAVIL,EAAK,KACLA,EAAK,IAAMA,GAGXE,EAAK,KACLA,EAAK,IAAMA,GAGfJ,EAAQM,EAAO,IAAMF,EAAK,IAAMF,EAG5B,sBAAKhG,UAAU,2EAAf,UA5BI,qBAAKA,UAAU,qCAAf,SACI,cAACC,EAAA,EAAD,CACIE,QAAS,kBAAMf,EAAQK,KAAK,UAC5BI,MAAO,CAACE,MAAO,KAAMuG,WAAY,QACjCtG,UAAU,OAHd,oBA8BJ,qBAAKA,UAAU,yDAAf,SACI,6BAAI,0DAGR,8BACI,uCAAUvB,EAAK2G,IAAL,aAAiB3G,EAAK2G,KAAQ,WAG5C,eAACmB,EAAA,EAAD,CAAMvG,UAAU,aAAawG,SArDf,SAACd,GAGnB,GAFAA,EAAEe,iBAb6B,IAA5BhI,EAAKoG,KAAK6B,OAAOC,QAA+C,IAA/BlI,EAAKsG,QAAQ2B,OAAOC,QAG7B,KAAxBlI,EAAKuG,QAAQ2B,SAAkBC,IAAUC,QAAQpI,EAAKe,QAGtDf,EAAKwG,OAAS,MAAWxG,EAAKyG,YAAczG,EAAK0G,UAAY1G,EAAK2G,IAUjE,OAAOlE,MAAM,qBAGjBwD,EAAMR,sBAAsBzF,GAC5ByC,MAAM,6BACN9B,EAAQK,KAAK,UA4C6CI,MAAO,CAACyG,WAAY,QAA1E,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,6BACA,cAACC,EAAA,EAAD,CACInC,KAAK,OACL7E,UAAU,OACV6F,MAAOpH,EAAKoG,KACZoC,SAAUrB,EACVzF,QAASsF,EACTyB,QAAS3B,EAAUV,MAAoC,IAA5BpG,EAAKoG,KAAK6B,OAAOC,SAEhD,cAACQ,EAAA,EAAD,CAAcD,SAAO,EAArB,qCAKJ,eAACJ,EAAA,EAAD,CAAW9G,UAAU,OAArB,UACI,cAAC+G,EAAA,EAAD,sBACA,cAACC,EAAA,EAAD,CACInC,KAAK,UACL7E,UAAU,OACV6F,MAAOpH,EAAKsG,QACZkC,SAAUrB,EACVzF,QAASsF,EACTyB,QAAS3B,EAAUR,SAA0C,IAA/BtG,EAAKsG,QAAQ2B,OAAOC,SAEtD,cAACQ,EAAA,EAAD,CAAcD,SAAO,EAArB,wCAKJ,eAACJ,EAAA,EAAD,CAAW9G,UAAU,OAArB,UACI,cAAC+G,EAAA,EAAD,qBACA,cAACC,EAAA,EAAD,CACInC,KAAK,UACL7E,UAAU,OACV6F,MAAOpH,EAAKuG,QACZxB,KAAK,SACLyD,SAAUrB,EACVzF,QAASsF,EACTyB,QAAS3B,EAAUP,SAAmC,KAAxBvG,EAAKuG,QAAQ2B,SAE/C,cAACQ,EAAA,EAAD,CAAcD,SAAO,EAArB,sCAKJ,eAACJ,EAAA,EAAD,CAAW9G,UAAU,OAArB,UACI,cAAC+G,EAAA,EAAD,oBACA,cAACC,EAAA,EAAD,CACInC,KAAK,QACL7E,UAAU,OACV6F,MAAOpH,EAAKe,MACZyH,SAAUrB,EACVzF,QAASsF,EACTyB,QAAS3B,EAAU/F,QAAUoH,IAAUC,QAAQpI,EAAKe,SAExD,cAAC2H,EAAA,EAAD,CAAcD,SAAO,EAArB,sCAKJ,eAACJ,EAAA,EAAD,CAAW9G,UAAU,OAArB,UACI,cAAC+G,EAAA,EAAD,qBACA,cAACC,EAAA,EAAD,CACInC,KAAK,SACL7E,UAAU,OACV6F,MAAOpH,EAAKwG,OACZzB,KAAK,SACLyD,SAAUrB,EACVzF,QAASsF,EACTyB,QAAS3B,EAAUN,QAAUxG,EAAKwG,OAAS,MAE/C,cAACkC,EAAA,EAAD,CAAcD,SAAO,EAArB,yCAKJ,eAACJ,EAAA,EAAD,CAAW9G,UAAU,OAArB,UACI,cAAC+G,EAAA,EAAD,yBACA,cAACC,EAAA,EAAD,CACInC,KAAK,YACL7E,UAAU,OACV6F,MAAOpH,EAAKyG,UACZ1B,KAAK,OACL4D,IAAKtB,EACLmB,SAAUrB,OAKdnH,EAAKyG,UACD,eAAC4B,EAAA,EAAD,CAAW9G,UAAU,OAArB,UACI,cAAC+G,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CACInC,KAAK,UACL7E,UAAU,OACV6F,MAAOpH,EAAK0G,QACZ3B,KAAK,OACLyD,SAAUrB,EACVwB,IAAK3I,EAAKyG,eAIlB,KAGR,cAACjF,EAAA,EAAD,CAAQD,UAAU,OAAOwD,KAAK,SAA9B,4B,UC7KDiB,eAAQ,MAJI,SAAClB,GAAD,MAAe,CACtCM,WAAY,kBAAMN,EAASM,EAAWjC,eAG3B6C,EA1DI,SAACC,GAEhB,IAAMtF,EAAUC,cAEhBC,qBAAU,WACNoF,EAAMb,eAEP,IAiBH,OACI,sBACIhE,MAAO,CAACC,OAAQ,QAASC,MAAO,SADpC,UAGI,qBAAKC,UAAU,mEAAf,SACI,cAACC,EAAA,EAAD,CAAQE,QAXE,WAGlB,OAFA3B,EAAY,IACZQ,EAAmB,IACZI,EAAQK,KAAK,WAQoBO,UAAU,YAAYH,MAAO,CAACwH,YAAa,QAA3E,sBAIJ,sBAAKrH,UAAU,uEAAf,UACQ,cAACsH,GAAA,EAAD,CACItH,UAAU,6DACVH,MAAO,CAACK,OAAQ,UAAWqH,aAAc,MAAOC,WAAY,WAC5DrH,QA5BM,WACtB,OAAOf,EAAQK,KAAK,WAwBR,4BAQA,cAAC6H,GAAA,EAAD,CACItH,UAAU,6DACVH,MAAO,CAACK,OAAQ,UAAWqH,aAAc,MAAOC,WAAY,WAC5DrH,QAhCK,WACrB,OAAOf,EAAQK,KAAK,UA4BR,0C,mBC9CPgI,GAAa,CACtB/D,KAAM,IA2BKgE,IJyCbrD,EIhDiCoD,GJiDjCnD,EIlEc,SAACqD,EAAO5E,GAAY,IAAD,EACzBW,EAASX,EAATW,KAGN,OAFAA,EAAI,UAAGA,SAAH,aAAG,EAAMA,KAENX,EAAOS,MACV,KAAKS,EAAYN,SACb,OAAOV,OAAOC,OAAO,GAAIyE,EAAO,CAAEjE,SAEtC,KAAKc,EAAwBb,SACzB,IAAMiE,EAAeD,EAAMjE,KAAKd,OAAOc,GACvC,OAAOT,OAAOC,OAAO,GAAIyE,EAAO,CAAEjE,KAAMkE,IAE5C,QACI,OAAOD,IJsDjBpD,EIlDsD,CACpD3C,QAAS,CACLqC,EACAO,IJiDC,SAASmD,EAAO5E,GAKrB,GAJK4E,IACHA,EAAQtD,GAGNE,EAAS,CACX,GAAIA,EAAQ3C,SAAW2C,EAAQ3C,QAAQ+E,OAAQ,CAAC,IAAD,gBAClBpC,EAAQ3C,SADU,IAC7C,2BACE,GAD0C,QACzBA,UAAYmB,EAAOS,KAClC,OAAOP,OAAOC,OAAO,GAAIyE,EAAO,CAC9BE,cAAe1F,EACf2F,SAAS,EACTpI,MAAO,OANgC,+BAW/C,GAAI6E,EAAQ7E,OAAS6E,EAAQ7E,MAAMiH,OAAQ,CAAC,IAAD,gBACdpC,EAAQ7E,OADM,IACzC,2BACE,GADwC,QACvBA,QAAUqD,EAAOS,KAChC,OAAOP,OAAOC,OAAO,GAAIyE,EAAO,CAC9BE,cAAe1F,EACf2F,SAAS,EACTpI,MAAOqD,EAAOrD,QANqB,gCAY7C,OAAO4E,EAAQqD,EAAO5E,KKjGbgF,GAAcC,cALH,SAACL,GACrB,OAAOA,GAASF,MAMhB,SAAAQ,GACI,OAAOA,EAAYC,MAAMxE,MAAQ,M,UC6C1ByE,GArDE,SAACzD,GAEd,IAAQjG,EAASiG,EAATjG,KACJ2J,EAAO,IAAIrC,KAAKtH,EAAKyG,WAOzB,OACI,cAACmD,GAAA,EAAD,CAAKC,GAAI,EAAGtI,UAAU,OAAtB,SACI,eAACsH,GAAA,EAAD,CAAMzH,MAAO,CAAC0I,OAAQ,kBAAmBC,YAAa,QAAtD,UACI,cAACC,GAAA,EAAD,UACI,iCACI,iDACChK,EAAKoG,UAId,cAAC4D,GAAA,EAAD,UACI,iCACI,8CADJ,MAEQhK,EAAKwG,YAIjB,cAACwD,GAAA,EAAD,UACI,iCACI,2CADJ,aAEQhK,QAFR,IAEQA,OAFR,EAEQA,EAAM2G,SAIlB,cAACqD,GAAA,EAAD,UACI,iCACI,oDACCL,EAAKnC,UAFV,IAGMmC,EAAKjC,WAAa,EAHxB,IAIMiC,EAAK/B,mBAIf,cAACoC,GAAA,EAAD,CAAKzI,UAAU,mDAAf,SACI,cAACC,EAAA,EAAD,CAAQJ,MAAO,CAACK,OAAQ,UAAWH,MAAO,SAAUI,QAvC3C,WAErB,OADAuE,EAAMgE,aAAajK,GACZiG,EAAMiE,eAqCD,8B,8BCkBLC,GA9DK,SAAClE,GAEjB,IAAQmE,EAAyBnE,EAAzBmE,OAAQC,EAAiBpE,EAAjBoE,OAAQrK,EAASiG,EAATjG,KACpB2J,EAAO,IAAIrC,KAAKtH,EAAKyG,WAEzB,OACI,qBAAKlF,UAAU,GAAf,SACI,eAAC+I,GAAA,EAAD,CAAOF,OAAQA,EAAQC,OAAQA,EAAQ9I,UAAU,MAAjD,UACI,cAACgJ,GAAA,EAAD,+BAIA,eAACC,GAAA,EAAD,WACI,cAACR,GAAA,EAAD,UACI,iCACI,iDACChK,EAAKoG,UAId,cAAC4D,GAAA,EAAD,UACI,iCACI,8CADJ,MAEQhK,EAAKwG,YAIjB,cAACwD,GAAA,EAAD,UACI,iCACI,2CADJ,aAEQhK,QAFR,IAEQA,OAFR,EAEQA,EAAM2G,SAIlB,cAACqD,GAAA,EAAD,UACI,iCACI,oDACCL,EAAKnC,UAFV,IAGMmC,EAAKjC,WAAa,EAHxB,IAIMiC,EAAK/B,mBAIf,cAACoC,GAAA,EAAD,UACI,iCACI,+CACChK,EAAKsG,aAId,cAAC0D,GAAA,EAAD,UACI,iCACI,6CACChK,EAAKe,oBC+BnBiF,gBARS,SAACkD,GAAD,MAAY,CAChCO,MAAOH,GAAYJ,OAGI,SAACpE,GAAD,MAAe,CACtC2F,WAAY,kBAAM3F,EAASM,EAAWjC,eAG3B6C,EA9EQ,SAACC,GAEpB,IAAMtF,EAAUC,cAChB,EAAsCuF,oBAAS,GAA/C,mBAAOuE,EAAP,KAAoBC,EAApB,KACA,EAAkCxE,mBAAS,IAA3C,mBAAOyE,EAAP,KAAkBX,EAAlB,KAGMI,EAAS,WACXM,GAAgBD,IAKpB7J,qBAAU,WACN,GAA0B,IAAvBoF,EAAMwD,MAAMvB,OACX,OAAOjC,EAAMwE,eAGlB,IAgBH,OACI,sBAAKlJ,UAAU,iCAAf,UAbI,qBAAKA,UAAU,qCAAf,SACI,cAACC,EAAA,EAAD,CACIE,QAAS,kBAAMf,EAAQK,KAAK,UAC5BI,MAAO,CAACE,MAAO,KAAMuG,WAAY,QACjCtG,UAAU,OAHd,oBAiBuB,IAAvB0E,EAAMwD,MAAMvB,OACR,qBAAK3G,UAAU,4DAAf,sCAIA,KAGR,cAAC,GAAD,CACI6I,OAAQM,EACRL,OAAQA,EACRrK,KAAM4K,IAGV,cAACZ,GAAA,EAAD,CAAKzI,UAAU,YAAf,SAEQ0E,EAAMwD,MAAMoB,KAAI,SAACC,EAAUC,GACvB,OAAO,cAAC,GAAD,CACC/K,KAAM8K,EAENZ,YAAaG,EACbJ,aAAcA,GAFTc,cCvCtBC,GAxBM,SAAC/E,GAElB,IAAMtF,EAAUC,cAahB,OAXAC,qBAAU,WAEN,IACI,IAAMoK,EAAUnK,YAAWL,KAC3BS,QAAQC,IAAI8J,GACd,MAAOhK,GACLN,EAAQK,KAAK,aAGlB,CAACL,IAGA,cAAC,IAAD,CACIgC,MAAOsD,EAAMtD,MACbC,KAAMqD,EAAMrD,KACZsI,UAAWjF,EAAMiF,aCadC,GA9BS,SAAClF,GACrB,OACI,eAAC,IAAD,WACI,cAAC,GAAD,CACItD,OAAK,EACLC,KAAK,IACLsI,UAAWE,KAGf,cAAC,GAAD,CACIzI,OAAK,EACLC,KAAK,QACLsI,UAAWE,KAGf,cAAC,GAAD,CACIzI,OAAK,EACLC,KAAK,SACLsI,UAAWG,KAGf,cAAC,GAAD,CACI1I,OAAK,EACLC,KAAK,QACLsI,UAAWI,SCfZC,GATG,WACd,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,EAAD,IACA,cAAC,GAAD,Q,kBCPCC,GAAW,CACpBhC,MAAOR,IAGLyC,GAAMC,aAAgBF,IAQbG,GAFDC,cAJM,SAAC3C,EAAO5E,GACxB,OAAOoH,GAAIxC,EAAO5E,KAGiBwH,aAAgBC,OCExCC,GAVC,WACZ,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,GAAD,S,OCHhBK,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.caae0408.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDF58fXXrQDdhbTeu2zjDQJxl48ZIZEoNE\",\r\n    authDomain: \"loan-management-95418.firebaseapp.com\",\r\n    projectId: \"loan-management-95418\",\r\n    storageBucket: \"loan-management-95418.appspot.com\",\r\n    messagingSenderId: \"266181542728\",\r\n    appId: \"1:266181542728:web:7f8fe1dcfc6d99abdfa97d\",\r\n    measurementId: \"G-P4GTNKWC3T\"\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n\r\nexport const provider = new GoogleAuthProvider()\r\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\nexport const auth = getAuth()\r\n\r\nexport default app ","export const setUserInfo = (info) => {\r\n    localStorage.setItem(\"userInfo\", info);\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n    if(localStorage.getItem(\"userInfo\")) {\r\n        return JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport const setUserAccessToken = (token) => {\r\n    localStorage.setItem(\"userAccessToken\", token)\r\n}\r\n\r\nexport const getUserAccessToken = () => {\r\n    if(localStorage.getItem(\"userAccessToken\")) {\r\n        return localStorage.getItem(\"userAccessToken\")\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { signInWithPopup } from '@firebase/auth';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\nimport { auth, provider } from \"../../helpers/firebase\"\r\nimport { getUserAccessToken, getUserInfo, setUserAccessToken, setUserInfo } from '../../helpers/localStorage';\r\nimport { useHistory } from 'react-router';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Button } from \"reactstrap\"\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        // We fetch the access token from local storage (if exist), and check if the token is valid.\r\n        // If token is valid, user redirected to the home page.\r\n        try {\r\n            const decoded = jwt_decode(getUserAccessToken())\r\n            \r\n            if(decoded.email === getUserInfo().email) {\r\n                history.push(\"/home\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [history]);\r\n\r\n    const signInHandler = () => {\r\n\r\n        // Method provided by firebase to sign in user using google auth.\r\n        signInWithPopup(auth, provider)\r\n            .then((result) => {\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n                // The signed-in user info.\r\n                const user = result.user;\r\n                const token = user.stsTokenManager.accessToken;\r\n\r\n                // Storing logged in user information for further use.\r\n                setUserInfo(JSON.stringify(user))\r\n                setUserAccessToken(token)\r\n                history.push(\"/home\")\r\n\r\n            }).catch((error) => {\r\n                // Handle Errors here.\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                const email = error.email;\r\n                // The AuthCredential type that was used.\r\n                const credential = GoogleAuthProvider.credentialFromError(error);\r\n\r\n                console.log(errorCode, errorMessage, email, credential);\r\n\r\n                alert(`Something went wrong! Please try again! ${errorMessage}`)\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{height: \"100vh\", width: \"100vw\"}}>\r\n            <div \r\n                className=\"h-100 w-100 d-flex justify-content-center align-items-center\" \r\n            >\r\n                <Button\r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={signInHandler}\r\n                >\r\n                    Continue with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router\"\r\nimport LoginScreen from '../screens/Login'\r\n\r\nconst AuthRouteSwitch = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\">\r\n                <LoginScreen />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AuthRouteSwitch\r\n","import axios from \"axios\"\r\nimport { getUserAccessToken, getUserInfo } from \"./localStorage\";\r\n\r\nconst defaultHeaders = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n}\r\n\r\nconst LOCAL_SERVER_URL = \"http://localhost:8000\";\r\n\r\nconst dash_api = axios.create({\r\n    baseURL: `${LOCAL_SERVER_URL}/api`,\r\n    ...defaultHeaders,\r\n});\r\n\r\ndash_api.interceptors.request.use(\r\n    (config) => {\r\n        const token = getUserAccessToken()\r\n        const user = getUserInfo().email;\r\n\r\n        if(token) {\r\n            config.headers = {\r\n                ...config.headers,\r\n                'jwt_token': token,\r\n                'user_id': user,\r\n            };\r\n        }\r\n\r\n        return config;\r\n    },\r\n    (err) => {\r\n        return Promise.reject(err);\r\n    }\r\n)\r\n\r\nexport default dash_api","import {reduce, concat, pick} from 'lodash';\r\nconst LOADING_STATUS = {\r\n    INIT: 0,\r\n    LOADING: 1,\r\n    LOADED: 2,\r\n    ERROR: 3\r\n}\r\n\r\nexport const generateConstants = function(\r\n  str,\r\n  extra_methods\r\n) {\r\n  const actions = concat(['request', 'response', 'error'], extra_methods);\r\n\r\n  return reduce(actions,\r\n    (acc, action) => {\r\n      if(action) {\r\n        acc[action] = `${str.toUpperCase()}_${action.toUpperCase()}`;\r\n      }\r\n      return Object.assign({}, acc);\r\n    },\r\n    {}\r\n  );\r\n};\r\n\r\nexport class ReduxAsyncAction {\r\n  constants;\r\n  progressBar;\r\n  request\r\n  dispatch;\r\n\r\n  constructor(action_namespace, extra_actions) {\r\n    this.constants = generateConstants(action_namespace, extra_actions);\r\n    this.progressBar = false;\r\n  }\r\n  showProgressBar() {\r\n    this.progressBar = true;\r\n  }\r\n  registerRequest(promiseClosure) {\r\n    this.request = (...args) => {\r\n      return (dispatch) => {\r\n        dispatch({ type: this.constants.request });\r\n        if (this.progressBar) {\r\n          dispatch({ type: 'PROGRESS_BAR_ACTIVE' });\r\n        }\r\n        this.dispatch = dispatch;\r\n\r\n        return promiseClosure\r\n          .apply(this, args)\r\n          .then((data) => {\r\n            dispatch({ type: this.constants.response, data });\r\n            if (this.progressBar) {\r\n              dispatch({ type: 'PROGRESS_BAR_COMPLETE' });\r\n            }\r\n            return data;\r\n          })\r\n          .catch((error) => {\r\n            dispatch({\r\n              type: this.constants.error,\r\n              error: pick(error, ['data', 'status', 'statusText']) || error\r\n            });\r\n            if (this.progressBar) {\r\n              dispatch({ type: 'PROGRESS_BAR_ERROR' });\r\n            }\r\n            throw error;\r\n          });\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nexport const reducerWrapper = function(\r\n  init_state,\r\n  handler,\r\n  options\r\n) {\r\n  return function(state, action) {\r\n    if (!state) {\r\n      state = init_state;\r\n    }\r\n\r\n    if (options) {\r\n      if (options.request && options.request.length) {\r\n        for (const action_group of options.request) {\r\n          if (action_group.request === action.type) {\r\n            return Object.assign({}, state, {\r\n              loadingStatus: LOADING_STATUS.LOADING,\r\n              loading: true,\r\n              error: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (options.error && options.error.length) {\r\n        for (const action_group of options.error) {\r\n          if (action_group.error === action.type) {\r\n            return Object.assign({}, state, {\r\n              loadingStatus: LOADING_STATUS.ERROR,\r\n              loading: false,\r\n              error: action.error\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return handler(state, action);\r\n  };\r\n};","import dash_api from \"../helpers/dash_api\"\r\nimport { ReduxAsyncAction } from \"../helpers/action_helper\"\r\n\r\nexport const FetchLoans = new ReduxAsyncAction('FETCH_LOANS')\r\nFetchLoans.registerRequest(async () => {\r\n    return dash_api.get('/fetch-loan').then((data) => data)\r\n})\r\nexport const FETCH_LOANS = FetchLoans.constants\r\n\r\n\r\nexport const CreateLoanApplication = new ReduxAsyncAction('CREATE_LOAN_APPLICATION')\r\nCreateLoanApplication.registerRequest(async (body) => {\r\n    return dash_api.post('/create-loan', body).then((data) => data)\r\n})\r\nexport const CREATE_LOAN_APPLICATION = CreateLoanApplication.constants","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, FormFeedback, FormGroup, Input, Label } from \"reactstrap\"\r\nimport { getUserInfo } from '../../helpers/localStorage'\r\nimport { useHistory } from 'react-router'\r\nimport validator from \"validator\"\r\nimport { connect } from 'react-redux'\r\nimport { CreateLoanApplication } from '../../actions'\r\n\r\nconst ApplyLoanScreen = (props) => {\r\n\r\n    const userInfo = getUserInfo()\r\n    const history = useHistory()\r\n\r\n    const [info, setInfo] = useState({\r\n        name: userInfo.displayName,\r\n        address: \"\",\r\n        contact: \"\",\r\n        email: userInfo.email,\r\n        amount: \"\",\r\n        startDate: null,\r\n        endDate: null,\r\n        emi: 0,\r\n    })\r\n\r\n    // This stores if form element has been clicked even once. This helps in showing the\r\n    // error message in case the entered value is invalid.\r\n    const [isTouched, setIsTouched] = useState({\r\n        name: false,\r\n        address: false,\r\n        contact: false,\r\n        email: false,\r\n        amoutn: false,\r\n        startDate: false,\r\n        endDate: false,\r\n    })\r\n\r\n    // The value of EMI is not calculated correctly. A default value is given instead.\r\n    useEffect(() => {\r\n        if(!info.startDate || !info.endDate || info.amount < 100000) {\r\n            return setInfo({\r\n                ...info,\r\n                emi: 0,\r\n            })\r\n        }\r\n\r\n        setInfo({\r\n            ...info,\r\n            emi: 1000\r\n        })\r\n    }, [info.startDate, info.endDate, info.amount])\r\n\r\n    const formClickHandler = (e) => {\r\n        setIsTouched({\r\n            ...isTouched,\r\n            [e.target.name]: true,\r\n        })\r\n    }\r\n\r\n    const formChangeHandler = (e) => {\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]: e.target.value,\r\n        }) \r\n    }\r\n\r\n    const invalidExist = () => {\r\n        if(info.name.trim().length === 0 || info.address.trim().length === 0)\r\n            return true\r\n\r\n        if(info.contact.length !== 10 || !validator.isEmail(info.email)) \r\n            return true\r\n\r\n        if(info.amount < 100000 || !info.startDate || !info.endDate || !info.emi)\r\n            return true\r\n\r\n        return false\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(invalidExist()) {\r\n            return alert(\"Fill valid values\")\r\n        }\r\n\r\n        props.CreateLoanApplication(info)\r\n        alert(\"Loan applied successfully\")\r\n        history.push('/home')\r\n    }\r\n\r\n    const _renderBackButton = () => {\r\n        return (\r\n            <div className=\"d-flex justify-content-start w-100\">\r\n                <Button \r\n                    onClick={() => history.push(\"/home\")}\r\n                    style={{width: \"5%\", marginLeft: \"10px\"}}\r\n                    className=\"mt-3\"\r\n                >\r\n                    Back\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    var today = new Date()\r\n    var dd = today.getDate()\r\n    var mm = today.getMonth() + 1\r\n    var yyyy = today.getFullYear()\r\n\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    } \r\n        \r\n    today = yyyy + '-' + mm + '-' + dd\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column h-100 w-100 align-items-center justify-content-center\">\r\n            {_renderBackButton()}\r\n\r\n            <div className=\"d-flex align-items-center justify-content-center w-100\">\r\n                <h1><strong>Loan Application</strong></h1>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>EMI: {info.emi ? `Rs ${info.emi}` : \"N/A\"}</h3>\r\n            </div>\r\n\r\n            <Form className=\"w-100 mt-4\" onSubmit={submitHandler} style={{marginLeft: \"50px\"}} >\r\n                <FormGroup>\r\n                    <Label>Applicant Name</Label>\r\n                    <Input \r\n                        name=\"name\" \r\n                        className=\"w-25\" \r\n                        value={info.name} \r\n                        onChange={formChangeHandler} \r\n                        onClick={formClickHandler}\r\n                        invalid={isTouched.name && info.name.trim().length === 0}    \r\n                    />\r\n                    <FormFeedback invalid>\r\n                        Name cannot be empty\r\n                    </FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label>Address</Label>\r\n                    <Input \r\n                        name=\"address\" \r\n                        className=\"w-50\" \r\n                        value={info.address} \r\n                        onChange={formChangeHandler} \r\n                        onClick={formClickHandler}\r\n                        invalid={isTouched.address && info.address.trim().length === 0}\r\n                    />\r\n                    <FormFeedback invalid>\r\n                        Address cannot be empty\r\n                    </FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label>Mobile</Label>\r\n                    <Input \r\n                        name=\"contact\" \r\n                        className=\"w-25\" \r\n                        value={info.contact} \r\n                        type=\"number\" \r\n                        onChange={formChangeHandler} \r\n                        onClick={formClickHandler}\r\n                        invalid={isTouched.contact && info.contact.length !== 10}\r\n                    />\r\n                    <FormFeedback invalid>\r\n                        Invalid mobile number\r\n                    </FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label>Email</Label>\r\n                    <Input \r\n                        name=\"email\" \r\n                        className=\"w-50\" \r\n                        value={info.email} \r\n                        onChange={formChangeHandler} \r\n                        onClick={formClickHandler}\r\n                        invalid={isTouched.email && !validator.isEmail(info.email)}    \r\n                    />\r\n                    <FormFeedback invalid>\r\n                        Invalid Email Address\r\n                    </FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label>Amount</Label>\r\n                    <Input \r\n                        name=\"amount\" \r\n                        className=\"w-25\" \r\n                        value={info.amount} \r\n                        type=\"number\" \r\n                        onChange={formChangeHandler} \r\n                        onClick={formClickHandler}\r\n                        invalid={isTouched.amount && info.amount < 100000}\r\n                    />\r\n                    <FormFeedback invalid>\r\n                        Minimum amount is 100000\r\n                    </FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label>Start Date</Label>\r\n                    <Input \r\n                        name=\"startDate\" \r\n                        className=\"w-25\" \r\n                        value={info.startDate} \r\n                        type=\"date\" \r\n                        min={today}\r\n                        onChange={formChangeHandler} \r\n                    />\r\n                </FormGroup>\r\n\r\n                {\r\n                    info.startDate ? \r\n                        <FormGroup className=\"mt-3\">\r\n                            <Label>End Date</Label>\r\n                            <Input \r\n                                name=\"endDate\" \r\n                                className=\"w-25\" \r\n                                value={info.endDate} \r\n                                type=\"date\" \r\n                                onChange={formChangeHandler}\r\n                                min={info.startDate} \r\n                            />\r\n                        </FormGroup>\r\n                        :\r\n                        null\r\n                }\r\n\r\n                <Button className=\"mt-5\" type=\"submit\">\r\n                    Apply\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    CreateLoanApplication: (body) => dispatch(CreateLoanApplication.request(body))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ApplyLoanScreen)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { Button, Card } from 'reactstrap';\r\nimport { FetchLoans } from '../../actions';\r\nimport { setUserAccessToken, setUserInfo } from '../../helpers/localStorage';\r\n\r\nconst HomeScreen = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        props.FetchLoans()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const applyClickHandler = () => {\r\n        return history.push(\"/apply\")\r\n    }\r\n\r\n    const viewClickHandler = () => {\r\n        return history.push(\"/view\")\r\n    }\r\n\r\n    // TO handle logout, method removes the user info and access token from local storage.\r\n    const logoutHandler = () => {\r\n        setUserInfo(\"\")\r\n        setUserAccessToken(\"\")\r\n        return history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{height: \"100vh\", width: \"100vw\"}} \r\n        >\r\n            <div className=\"w-100 d-flex flex-row align-items-right justify-content-end mr-5\">\r\n                <Button onClick={logoutHandler} className=\"mr-5 mt-3\" style={{marginRight: \"12px\"}}>\r\n                    Logout\r\n                </Button>\r\n            </div>\r\n            <div className=\"h-75 w-100 d-flex flex-row justify-content-around align-items-center\">\r\n                    <Card \r\n                        className=\"w-25 d-flex h-50 justify-content-center align-items-center\" \r\n                        style={{cursor: \"pointer\", borderRadius: \"8px\", background: \"#d1e0d5\"}} \r\n                        onClick={applyClickHandler}\r\n                    >\r\n                        APPLY FOR LOAN\r\n                    </Card>\r\n\r\n                    <Card \r\n                        className=\"w-25 d-flex h-50 justify-content-center align-items-center\" \r\n                        style={{cursor: \"pointer\", borderRadius: \"8px\", background: \"#d1e0d5\"}} \r\n                        onClick={viewClickHandler}\r\n                    >\r\n                        VIEW PREVIOUS LOANS\r\n                    </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    FetchLoans: () => dispatch(FetchLoans.request())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(HomeScreen)\r\n","import { reducerWrapper } from \"../helpers/action_helper\"\r\nimport { FETCH_LOANS, CREATE_LOAN_APPLICATION } from \"../actions\"\r\n\r\nexport const INIT_STATE = {\r\n    data: []\r\n}\r\n\r\nconst Handler = (state, action) => {\r\n    let { data } = action\r\n    data = data?.data\r\n\r\n    switch(action.type) {\r\n        case FETCH_LOANS.response:\r\n            return Object.assign({}, state, { data })\r\n\r\n        case CREATE_LOAN_APPLICATION.response:\r\n            const updatedLoans = state.data.concat(data)\r\n            return Object.assign({}, state, { data: updatedLoans })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst LoanReducer = reducerWrapper(INIT_STATE, Handler, {\r\n    request: [\r\n        FETCH_LOANS,\r\n        CREATE_LOAN_APPLICATION,\r\n    ]\r\n})\r\n\r\nexport default LoanReducer","import { createSelector } from \"reselect\"\r\nimport { INIT_STATE } from \"../reducers/loanReducer\"\r\n\r\nexport const getState = (state) => {\r\n    return state || INIT_STATE\r\n}\r\n\r\n// This method selects the loans from the redux store.\r\nexport const selectLoans = createSelector(\r\n    getState,\r\n    loanReducer => {\r\n        return loanReducer.loans.data || []\r\n    }\r\n)","import React from 'react'\r\nimport { Button, Card, Col, Row } from 'reactstrap'\r\n\r\nconst LoanCard = (props) => {\r\n\r\n    const { info } = props\r\n    var date = new Date(info.startDate)\r\n\r\n    const cardClickHandler = () => {\r\n        props.setModalInfo(info)\r\n        return props.toggleModal()\r\n    }\r\n\r\n    return (\r\n        <Col lg={4} className=\"my-2\">\r\n            <Card style={{border: \"2px solid black\", paddingLeft: \"10px\"}} >\r\n                <Row>\r\n                    <span>\r\n                        <strong>Applicant: </strong>\r\n                        {info.name}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Amount: </strong>\r\n                        Rs {info.amount}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>EMI: </strong>\r\n                        Rs {info?.emi}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Date Applied: </strong>\r\n                        {date.getDate()}\r\n                        /{date.getMonth() + 1}\r\n                        /{date.getFullYear()}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row className=\"d-flex align-items-center justify-content-center\">\r\n                    <Button style={{cursor: \"pointer\", width: \"100px\"}} onClick={cardClickHandler}>\r\n                        See More\r\n                    </Button>\r\n                </Row>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default LoanCard\r\n","import React from 'react'\r\nimport { Modal, ModalBody, ModalHeader, Row } from 'reactstrap'\r\n\r\nconst DetailModal = (props) => {\r\n\r\n    const { isOpen, toggle, info } = props\r\n    var date = new Date(info.startDate)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal isOpen={isOpen} toggle={toggle} className=\"p-5\" >\r\n                <ModalHeader>\r\n                    Complete Details\r\n                </ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <Row>\r\n                        <span>\r\n                            <strong>Applicant: </strong>\r\n                            {info.name}\r\n                        </span>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <span>\r\n                            <strong>Amount: </strong>\r\n                            Rs {info.amount}\r\n                        </span>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <span>\r\n                            <strong>EMI: </strong>\r\n                            Rs {info?.emi}\r\n                        </span>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <span>\r\n                            <strong>Date Applied: </strong>\r\n                            {date.getDate()}\r\n                            /{date.getMonth() + 1}\r\n                            /{date.getFullYear()}\r\n                        </span>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <span>\r\n                            <strong>Address: </strong>\r\n                            {info.address}\r\n                        </span>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <span>\r\n                            <strong>Email: </strong>\r\n                            {info.email}\r\n                        </span>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Button, Row } from 'reactstrap'\r\nimport {connect} from 'react-redux';\r\nimport { selectLoans } from '../../selectors';\r\nimport LoanCard from './LoanCard';\r\nimport DetailModal from './DetailModal';\r\nimport { FetchLoans } from '../../actions';\r\n\r\nconst ViewLoanScreen = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [modalInfo, setModalInfo] = useState({})\r\n\r\n    // Toggle method for the modal.\r\n    const toggle = () => {\r\n        setIsModalOpen(!isModalOpen)\r\n    }\r\n\r\n    // Fetching the loans in case the loans array is empty. Could be helpful\r\n    // in cases when the view page is directly opened.\r\n    useEffect(() => {\r\n        if(props.loans.length === 0) {\r\n            return props.fetchLoans()\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const _renderBackButton = () => {\r\n        return (\r\n            <div className=\"d-flex justify-content-start w-100\">\r\n                <Button \r\n                    onClick={() => history.push(\"/home\")}\r\n                    style={{width: \"5%\", marginLeft: \"10px\"}}\r\n                    className=\"mt-3\"\r\n                >\r\n                    Back\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column h-100 w-100\">\r\n            { _renderBackButton() }\r\n\r\n            {/* Show some message in case there is no result to be showed to user. */}\r\n            {\r\n                props.loans.length === 0 ? \r\n                    <div className=\"d-flex flex-row align-items-center justify-content-center\">\r\n                        NO PREVIOUS RECORD FOUND\r\n                    </div>\r\n                    :\r\n                    null\r\n            }\r\n\r\n            <DetailModal\r\n                isOpen={isModalOpen}\r\n                toggle={toggle}\r\n                info={modalInfo}\r\n            />\r\n\r\n            <Row className=\"mt-4 mx-3\">\r\n                {\r\n                    props.loans.map((_current, idx) => {\r\n                        return <LoanCard \r\n                                info={_current} \r\n                                key={idx} \r\n                                toggleModal={toggle}\r\n                                setModalInfo={setModalInfo}\r\n                               />\r\n                    })\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loans: selectLoans(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchLoans: () => dispatch(FetchLoans.request())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewLoanScreen)\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getUserAccessToken } from '../helpers/localStorage';\r\n\r\nconst PrivateRoute = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        // Check if the user access token is invalid. If invalid, redirecting to the login screen.\r\n        try {\r\n            const decoded = jwt_decode(getUserAccessToken())\r\n            console.log(decoded)\r\n        } catch (error) {\r\n            history.push(\"/login\")\r\n        }\r\n\r\n    }, [history])\r\n\r\n    return (\r\n        <Route \r\n            exact={props.exact}\r\n            path={props.path}\r\n            component={props.component}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Switch } from 'react-router'\r\nimport ApplyLoanScreen from '../screens/ApplyLoan'\r\nimport HomeScreen from '../screens/Home'\r\nimport ViewLoanScreen from '../screens/ViewLoan'\r\nimport PrivateRoute from './PrivateRoute'\r\n\r\nconst MainRouteSwitch = (props) => {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute \r\n                exact\r\n                path=\"/\"\r\n                component={HomeScreen}\r\n            />\r\n\r\n            <PrivateRoute \r\n                exact\r\n                path=\"/home\"\r\n                component={HomeScreen}\r\n            />\r\n\r\n            <PrivateRoute \r\n                exact\r\n                path=\"/apply\"\r\n                component={ApplyLoanScreen}\r\n            />\r\n\r\n            <PrivateRoute \r\n                exact\r\n                path=\"/view\"\r\n                component={ViewLoanScreen}\r\n            />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default MainRouteSwitch\r\n","import React from 'react'\r\n// import { Route } from 'react-router'\r\n// import LoginScreen from '../screens/Login'\r\n\r\nimport AuthRouteSwitch from './AuthRouteSwitch'\r\nimport MainRouteSwitch from './MainRouteSwitch'\r\n\r\nconst MainRoute = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <AuthRouteSwitch />\r\n            <MainRouteSwitch />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainRoute\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport ReduxThunk from \"redux-thunk\"\r\nimport LoanReducer from \"./loanReducer\";\r\n\r\nexport const reducers = {\r\n    loans: LoanReducer\r\n}\r\n\r\nconst app = combineReducers(reducers);\r\n\r\nconst rootReducer = (state, action) => {\r\n    return app(state, action)\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk))\r\n\r\nexport default store","import React from 'react'\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { Provider } from 'react-redux'\r\nimport MainRoute from './MainRoute'\r\nimport store from '../reducers'\r\n\r\nconst MainApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <MainRoute />\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default MainApp\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './routes/MainApp';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <MainApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}