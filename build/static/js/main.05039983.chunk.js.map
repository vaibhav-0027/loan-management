{"version":3,"sources":["helpers/firebase.js","helpers/localStorage.js","screens/Login/index.jsx","routes/AuthRouteSwitch.jsx","helpers/dash_api.js","helpers/action_helper.js","actions/index.js","screens/ApplyLoan/index.jsx","screens/Home/index.jsx","reducers/loanReducer.js","selectors/index.js","screens/ViewLoan/LoanCard.jsx","screens/ViewLoan/DetailModal.jsx","screens/ViewLoan/index.jsx","routes/PrivateRoute.jsx","routes/MainRouteSwitch.jsx","routes/MainRoute.jsx","reducers/index.js","routes/MainApp.jsx","index.js"],"names":["provider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","addScope","auth","getAuth","setUserInfo","info","localStorage","setItem","getUserInfo","getItem","JSON","parse","setUserAccessToken","token","getUserAccessToken","LoginScreen","history","useHistory","useEffect","jwt_decode","email","push","error","console","log","style","height","width","className","cursor","onClick","signInWithPopup","then","result","user","stsTokenManager","accessToken","stringify","catch","errorCode","code","errorMessage","message","credential","credentialFromError","alert","AuthRouteSwitch","exact","path","Login","dash_api","axios","create","baseURL","interceptors","request","use","config","headers","err","Promise","reject","LOADING_STATUS","ReduxAsyncAction","action_namespace","extra_actions","this","constants","str","extra_methods","actions","concat","reduce","acc","action","toUpperCase","Object","assign","generateConstants","progressBar","promiseClosure","args","dispatch","type","apply","data","response","pick","FetchLoans","registerRequest","a","get","FETCH_LOANS","CreateLoanApplication","body","post","init_state","handler","options","CREATE_LOAN_APPLICATION","connect","props","userInfo","useState","name","displayName","address","contact","amount","startDate","endDate","emi","setInfo","amoutn","isTouched","setIsTouched","formClickHandler","e","target","formChangeHandler","value","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Button","marginLeft","Form","onSubmit","preventDefault","trim","length","validator","isEmail","FormGroup","Label","Input","onChange","invalid","FormFeedback","min","marginRight","Card","borderRadius","background","INIT_STATE","LoanReducer","state","updatedLoans","loadingStatus","loading","selectLoans","createSelector","loanReducer","loans","LoanCard","date","Col","lg","setModalInfo","toggleModal","Row","DetailModal","isOpen","toggle","Modal","fetchLoans","isModalOpen","setIsModalOpen","modalInfo","map","_current","idx","PrivateRoute","decoded","component","MainRouteSwitch","HomeScreen","ApplyLoanScreen","ViewLoanScreen","MainRoute","Fragment","reducers","app","combineReducers","store","createStore","applyMiddleware","ReduxThunk","MainApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05039983.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDF58fXXrQDdhbTeu2zjDQJxl48ZIZEoNE\",\n    authDomain: \"loan-management-95418.firebaseapp.com\",\n    projectId: \"loan-management-95418\",\n    storageBucket: \"loan-management-95418.appspot.com\",\n    messagingSenderId: \"266181542728\",\n    appId: \"1:266181542728:web:7f8fe1dcfc6d99abdfa97d\",\n    measurementId: \"G-P4GTNKWC3T\"\n}\n\nconst app = initializeApp(firebaseConfig)\n\nexport const provider = new GoogleAuthProvider()\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\nexport const auth = getAuth()\n\nexport default app ","export const setUserInfo = (info) => {\n    localStorage.setItem(\"userInfo\", info);\n}\n\nexport const getUserInfo = () => {\n    if(localStorage.getItem(\"userInfo\")) {\n        return JSON.parse(localStorage.getItem(\"userInfo\"))\n    }\n\n    return null\n}\n\nexport const setUserAccessToken = (token) => {\n    localStorage.setItem(\"userAccessToken\", token)\n}\n\nexport const getUserAccessToken = () => {\n    if(localStorage.getItem(\"userAccessToken\")) {\n        return localStorage.getItem(\"userAccessToken\")\n    }\n}","import React, { useEffect } from 'react'\nimport { signInWithPopup } from '@firebase/auth';\nimport { GoogleAuthProvider } from 'firebase/auth';\n\nimport { auth, provider } from \"../../helpers/firebase\"\nimport { getUserAccessToken, getUserInfo, setUserAccessToken, setUserInfo } from '../../helpers/localStorage';\nimport { useHistory } from 'react-router';\nimport jwt_decode from \"jwt-decode\";\n\nconst LoginScreen = () => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n\n        // We fetch the access token from local storage (if exist), and check if the token is valid.\n        // If token is valid, user redirected to the home page.\n        try {\n            const decoded = jwt_decode(getUserAccessToken())\n            \n            if(decoded.email === getUserInfo().email) {\n                history.push(\"/home\")\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }, [history]);\n\n    const signInHandler = () => {\n\n        // Method provided by firebase to sign in user using google auth.\n        signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                // const credential = GoogleAuthProvider.credentialFromResult(result);\n                // The signed-in user info.\n                const user = result.user;\n                const token = user.stsTokenManager.accessToken;\n\n                // Storing logged in user information for further use.\n                setUserInfo(JSON.stringify(user))\n                setUserAccessToken(token)\n                history.push(\"/home\")\n\n            }).catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n\n                console.log(errorCode, errorMessage, email, credential);\n\n                alert(`Something went wrong! Please try again! ${errorMessage}`)\n            });\n\n    }\n\n    return (\n        <div style={{height: \"100vh\", width: \"100vw\"}}>\n            <div \n                className=\"h-100 w-100 d-flex justify-content-center align-items-center\" \n                style={{cursor: 'pointer'}}\n                onClick={signInHandler}\n            >\n                Continue with Google\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport { Switch, Route } from \"react-router\"\nimport LoginScreen from '../screens/Login'\n\nconst AuthRouteSwitch = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/login\">\n                <LoginScreen />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default AuthRouteSwitch\n","import axios from \"axios\"\r\nimport { getUserAccessToken, getUserInfo } from \"./localStorage\";\r\n\r\nconst defaultHeaders = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n}\r\n\r\nconst LOCAL_SERVER_URL = \"https://loan-management-vaibhav.herokuapp.com\";\r\n\r\nconst dash_api = axios.create({\r\n    baseURL: `${LOCAL_SERVER_URL}/api`,\r\n    ...defaultHeaders,\r\n});\r\n\r\ndash_api.interceptors.request.use(\r\n    (config) => {\r\n        const token = getUserAccessToken()\r\n        const user = getUserInfo().email;\r\n\r\n        if(token) {\r\n            config.headers = {\r\n                ...config.headers,\r\n                'jwt_token': token,\r\n                'user_id': user,\r\n            };\r\n        }\r\n\r\n        return config;\r\n    },\r\n    (err) => {\r\n        return Promise.reject(err);\r\n    }\r\n)\r\n\r\nexport default dash_api","import {reduce, concat, pick} from 'lodash';\r\nconst LOADING_STATUS = {\r\n    INIT: 0,\r\n    LOADING: 1,\r\n    LOADED: 2,\r\n    ERROR: 3\r\n}\r\n\r\nexport const generateConstants = function(\r\n  str,\r\n  extra_methods\r\n) {\r\n  const actions = concat(['request', 'response', 'error'], extra_methods);\r\n\r\n  return reduce(actions,\r\n    (acc, action) => {\r\n      if(action) {\r\n        acc[action] = `${str.toUpperCase()}_${action.toUpperCase()}`;\r\n      }\r\n      return Object.assign({}, acc);\r\n    },\r\n    {}\r\n  );\r\n};\r\n\r\nexport class ReduxAsyncAction {\r\n  constants;\r\n  progressBar;\r\n  request\r\n  dispatch;\r\n\r\n  constructor(action_namespace, extra_actions) {\r\n    this.constants = generateConstants(action_namespace, extra_actions);\r\n    this.progressBar = false;\r\n  }\r\n  showProgressBar() {\r\n    this.progressBar = true;\r\n  }\r\n  registerRequest(promiseClosure) {\r\n    this.request = (...args) => {\r\n      return (dispatch) => {\r\n        dispatch({ type: this.constants.request });\r\n        if (this.progressBar) {\r\n          dispatch({ type: 'PROGRESS_BAR_ACTIVE' });\r\n        }\r\n        this.dispatch = dispatch;\r\n\r\n        return promiseClosure\r\n          .apply(this, args)\r\n          .then((data) => {\r\n            dispatch({ type: this.constants.response, data });\r\n            if (this.progressBar) {\r\n              dispatch({ type: 'PROGRESS_BAR_COMPLETE' });\r\n            }\r\n            return data;\r\n          })\r\n          .catch((error) => {\r\n            dispatch({\r\n              type: this.constants.error,\r\n              error: pick(error, ['data', 'status', 'statusText']) || error\r\n            });\r\n            if (this.progressBar) {\r\n              dispatch({ type: 'PROGRESS_BAR_ERROR' });\r\n            }\r\n            throw error;\r\n          });\r\n      };\r\n    };\r\n  }\r\n}\r\n\r\nexport const reducerWrapper = function(\r\n  init_state,\r\n  handler,\r\n  options\r\n) {\r\n  return function(state, action) {\r\n    if (!state) {\r\n      state = init_state;\r\n    }\r\n\r\n    if (options) {\r\n      if (options.request && options.request.length) {\r\n        for (const action_group of options.request) {\r\n          if (action_group.request === action.type) {\r\n            return Object.assign({}, state, {\r\n              loadingStatus: LOADING_STATUS.LOADING,\r\n              loading: true,\r\n              error: null\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (options.error && options.error.length) {\r\n        for (const action_group of options.error) {\r\n          if (action_group.error === action.type) {\r\n            return Object.assign({}, state, {\r\n              loadingStatus: LOADING_STATUS.ERROR,\r\n              loading: false,\r\n              error: action.error\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return handler(state, action);\r\n  };\r\n};","import dash_api from \"../helpers/dash_api\"\r\nimport { ReduxAsyncAction } from \"../helpers/action_helper\"\r\n\r\nexport const FetchLoans = new ReduxAsyncAction('FETCH_LOANS')\r\nFetchLoans.registerRequest(async () => {\r\n    return dash_api.get('/fetch-loan').then((data) => data)\r\n})\r\nexport const FETCH_LOANS = FetchLoans.constants\r\n\r\n\r\nexport const CreateLoanApplication = new ReduxAsyncAction('CREATE_LOAN_APPLICATION')\r\nCreateLoanApplication.registerRequest(async (body) => {\r\n    return dash_api.post('/create-loan', body).then((data) => data)\r\n})\r\nexport const CREATE_LOAN_APPLICATION = CreateLoanApplication.constants","import React, { useEffect, useState } from 'react'\nimport { Button, Form, FormFeedback, FormGroup, Input, Label } from \"reactstrap\"\nimport { getUserInfo } from '../../helpers/localStorage'\nimport { useHistory } from 'react-router'\nimport validator from \"validator\"\nimport { connect } from 'react-redux'\nimport { CreateLoanApplication } from '../../actions'\n\nconst ApplyLoanScreen = (props) => {\n\n    const userInfo = getUserInfo()\n    const history = useHistory()\n\n    const [info, setInfo] = useState({\n        name: userInfo.displayName,\n        address: \"\",\n        contact: \"\",\n        email: userInfo.email,\n        amount: \"\",\n        startDate: null,\n        endDate: null,\n        emi: 0,\n    })\n\n    // This stores if form element has been clicked even once. This helps in showing the\n    // error message in case the entered value is invalid.\n    const [isTouched, setIsTouched] = useState({\n        name: false,\n        address: false,\n        contact: false,\n        email: false,\n        amoutn: false,\n        startDate: false,\n        endDate: false,\n    })\n\n    // The value of EMI is not calculated correctly. A default value is given instead.\n    useEffect(() => {\n        if(!info.startDate || !info.endDate || info.amount < 100000) {\n            return setInfo({\n                ...info,\n                emi: 0,\n            })\n        }\n\n        setInfo({\n            ...info,\n            emi: 1000\n        })\n    }, [info.startDate, info.endDate, info.amount])\n\n    const formClickHandler = (e) => {\n        setIsTouched({\n            ...isTouched,\n            [e.target.name]: true,\n        })\n    }\n\n    const formChangeHandler = (e) => {\n        setInfo({\n            ...info,\n            [e.target.name]: e.target.value,\n        }) \n    }\n\n    const invalidExist = () => {\n        if(info.name.trim().length === 0 || info.address.trim().length === 0)\n            return true\n\n        if(info.contact.length !== 10 || !validator.isEmail(info.email)) \n            return true\n\n        if(info.amount < 100000 || !info.startDate || !info.endDate || !info.emi)\n            return true\n\n        return false\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        \n        if(invalidExist()) {\n            return alert(\"Fill valid values\")\n        }\n\n        props.CreateLoanApplication(info)\n        alert(\"Loan applied successfully\")\n        history.push('/home')\n    }\n\n    const _renderBackButton = () => {\n        return (\n            <div className=\"d-flex justify-content-start w-100\">\n                <Button \n                    onClick={() => history.push(\"/home\")}\n                    style={{width: \"5%\", marginLeft: \"10px\"}}\n                    className=\"mt-3\"\n                >\n                    Back\n                </Button>\n            </div>\n        )\n    }\n\n    var today = new Date()\n    var dd = today.getDate()\n    var mm = today.getMonth() + 1\n    var yyyy = today.getFullYear()\n\n    if (dd < 10) {\n        dd = '0' + dd\n    }\n\n    if (mm < 10) {\n        mm = '0' + mm\n    } \n        \n    today = yyyy + '-' + mm + '-' + dd\n\n    return (\n        <div className=\"d-flex flex-column h-100 w-100 align-items-center justify-content-center\">\n            {_renderBackButton()}\n\n            <div className=\"d-flex align-items-center justify-content-center w-100\">\n                <h1><strong>Loan Application</strong></h1>\n            </div>\n\n            <div>\n                <h3>EMI: {info.emi ? `Rs ${info.emi}` : \"N/A\"}</h3>\n            </div>\n\n            <Form className=\"w-100 mt-4\" onSubmit={submitHandler} style={{marginLeft: \"50px\"}} >\n                <FormGroup>\n                    <Label>Applicant Name</Label>\n                    <Input \n                        name=\"name\" \n                        className=\"w-25\" \n                        value={info.name} \n                        onChange={formChangeHandler} \n                        onClick={formClickHandler}\n                        invalid={isTouched.name && info.name.trim().length === 0}    \n                    />\n                    <FormFeedback invalid>\n                        Name cannot be empty\n                    </FormFeedback>\n                </FormGroup>\n\n                <FormGroup className=\"mt-3\">\n                    <Label>Address</Label>\n                    <Input \n                        name=\"address\" \n                        className=\"w-50\" \n                        value={info.address} \n                        onChange={formChangeHandler} \n                        onClick={formClickHandler}\n                        invalid={isTouched.address && info.address.trim().length === 0}\n                    />\n                    <FormFeedback invalid>\n                        Address cannot be empty\n                    </FormFeedback>\n                </FormGroup>\n\n                <FormGroup className=\"mt-3\">\n                    <Label>Mobile</Label>\n                    <Input \n                        name=\"contact\" \n                        className=\"w-25\" \n                        value={info.contact} \n                        type=\"number\" \n                        onChange={formChangeHandler} \n                        onClick={formClickHandler}\n                        invalid={isTouched.contact && info.contact.length !== 10}\n                    />\n                    <FormFeedback invalid>\n                        Invalid mobile number\n                    </FormFeedback>\n                </FormGroup>\n\n                <FormGroup className=\"mt-3\">\n                    <Label>Email</Label>\n                    <Input \n                        name=\"email\" \n                        className=\"w-50\" \n                        value={info.email} \n                        onChange={formChangeHandler} \n                        onClick={formClickHandler}\n                        invalid={isTouched.email && !validator.isEmail(info.email)}    \n                    />\n                    <FormFeedback invalid>\n                        Invalid Email Address\n                    </FormFeedback>\n                </FormGroup>\n\n                <FormGroup className=\"mt-3\">\n                    <Label>Amount</Label>\n                    <Input \n                        name=\"amount\" \n                        className=\"w-25\" \n                        value={info.amount} \n                        type=\"number\" \n                        onChange={formChangeHandler} \n                        onClick={formClickHandler}\n                        invalid={isTouched.amount && info.amount < 100000}\n                    />\n                    <FormFeedback invalid>\n                        Minimum amount is 100000\n                    </FormFeedback>\n                </FormGroup>\n\n                <FormGroup className=\"mt-3\">\n                    <Label>Start Date</Label>\n                    <Input \n                        name=\"startDate\" \n                        className=\"w-25\" \n                        value={info.startDate} \n                        type=\"date\" \n                        min={today}\n                        onChange={formChangeHandler} \n                    />\n                </FormGroup>\n\n                {\n                    info.startDate ? \n                        <FormGroup className=\"mt-3\">\n                            <Label>End Date</Label>\n                            <Input \n                                name=\"endDate\" \n                                className=\"w-25\" \n                                value={info.endDate} \n                                type=\"date\" \n                                onChange={formChangeHandler}\n                                min={info.startDate} \n                            />\n                        </FormGroup>\n                        :\n                        null\n                }\n\n                <Button className=\"mt-5\" type=\"submit\">\n                    Apply\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    CreateLoanApplication: (body) => dispatch(CreateLoanApplication.request(body))\n})\n\nexport default connect(null, mapDispatchToProps)(ApplyLoanScreen)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { Button, Card } from 'reactstrap';\nimport { FetchLoans } from '../../actions';\nimport { setUserAccessToken, setUserInfo } from '../../helpers/localStorage';\n\nconst HomeScreen = (props) => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        props.FetchLoans()\n        // eslint-disable-next-line\n    }, [])\n\n    const applyClickHandler = () => {\n        return history.push(\"/apply\")\n    }\n\n    const viewClickHandler = () => {\n        return history.push(\"/view\")\n    }\n\n    // TO handle logout, method removes the user info and access token from local storage.\n    const logoutHandler = () => {\n        setUserInfo(\"\")\n        setUserAccessToken(\"\")\n        return history.push(\"/login\")\n    }\n\n    return (\n        <div\n            style={{height: \"100vh\", width: \"100vw\"}} \n        >\n            <div className=\"w-100 d-flex flex-row align-items-right justify-content-end mr-5\">\n                <Button onClick={logoutHandler} className=\"mr-5 mt-3\" style={{marginRight: \"12px\"}}>\n                    Logout\n                </Button>\n            </div>\n            <div className=\"h-75 w-100 d-flex flex-row justify-content-around align-items-center\">\n                    <Card \n                        className=\"w-25 d-flex h-50 justify-content-center align-items-center\" \n                        style={{cursor: \"pointer\", borderRadius: \"8px\", background: \"#d1e0d5\"}} \n                        onClick={applyClickHandler}\n                    >\n                        APPLY FOR LOAN\n                    </Card>\n\n                    <Card \n                        className=\"w-25 d-flex h-50 justify-content-center align-items-center\" \n                        style={{cursor: \"pointer\", borderRadius: \"8px\", background: \"#d1e0d5\"}} \n                        onClick={viewClickHandler}\n                    >\n                        VIEW PREVIOUS LOANS\n                    </Card>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    FetchLoans: () => dispatch(FetchLoans.request())\n})\n\nexport default connect(null, mapDispatchToProps)(HomeScreen)\n","import { reducerWrapper } from \"../helpers/action_helper\"\r\nimport { FETCH_LOANS, CREATE_LOAN_APPLICATION } from \"../actions\"\r\n\r\nexport const INIT_STATE = {\r\n    data: []\r\n}\r\n\r\nconst Handler = (state, action) => {\r\n    let { data } = action\r\n    data = data?.data\r\n\r\n    switch(action.type) {\r\n        case FETCH_LOANS.response:\r\n            return Object.assign({}, state, { data })\r\n\r\n        case CREATE_LOAN_APPLICATION.response:\r\n            const updatedLoans = state.data.concat(data)\r\n            return Object.assign({}, state, { data: updatedLoans })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst LoanReducer = reducerWrapper(INIT_STATE, Handler, {\r\n    request: [\r\n        FETCH_LOANS,\r\n        CREATE_LOAN_APPLICATION,\r\n    ]\r\n})\r\n\r\nexport default LoanReducer","import { createSelector } from \"reselect\"\r\nimport { INIT_STATE } from \"../reducers/loanReducer\"\r\n\r\nexport const getState = (state) => {\r\n    return state || INIT_STATE\r\n}\r\n\r\n// This method selects the loans from the redux store.\r\nexport const selectLoans = createSelector(\r\n    getState,\r\n    loanReducer => {\r\n        return loanReducer.loans.data || []\r\n    }\r\n)","import React from 'react'\r\nimport { Card, Col, Row } from 'reactstrap'\r\n\r\nconst LoanCard = (props) => {\r\n\r\n    const { info } = props\r\n    var date = new Date(info.startDate)\r\n\r\n    const cardClickHandler = () => {\r\n        props.setModalInfo(info)\r\n        return props.toggleModal()\r\n    }\r\n\r\n    return (\r\n        <Col lg={4} className=\"my-2\">\r\n            <Card style={{cursor: \"pointer\"}} onClick={cardClickHandler}>\r\n                <Row>\r\n                    <span>\r\n                        <strong>Applicant: </strong>\r\n                        {info.name}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Amount: </strong>\r\n                        Rs {info.amount}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>EMI: </strong>\r\n                        Rs {info?.emi}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Date Applied: </strong>\r\n                        {date.getDate()}\r\n                        /{date.getMonth() + 1}\r\n                        /{date.getFullYear()}\r\n                    </span>\r\n                </Row>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default LoanCard\r\n","import React from 'react'\r\nimport { Modal, Row } from 'reactstrap'\r\n\r\nconst DetailModal = (props) => {\r\n\r\n    const { isOpen, toggle, info } = props\r\n    var date = new Date(info.startDate)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Modal isOpen={isOpen} toggle={toggle} className=\"p-5\" >\r\n                <Row>\r\n                    <span>\r\n                        <strong>Applicant: </strong>\r\n                        {info.name}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Amount: </strong>\r\n                        Rs {info.amount}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>EMI: </strong>\r\n                        Rs {info?.emi}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Date Applied: </strong>\r\n                        {date.getDate()}\r\n                        /{date.getMonth() + 1}\r\n                        /{date.getFullYear()}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Address: </strong>\r\n                        {info.address}\r\n                    </span>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <span>\r\n                        <strong>Email: </strong>\r\n                        {info.email}\r\n                    </span>\r\n                </Row>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailModal\r\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { Button, Row } from 'reactstrap'\nimport {connect} from 'react-redux';\nimport { selectLoans } from '../../selectors';\nimport LoanCard from './LoanCard';\nimport DetailModal from './DetailModal';\nimport { FetchLoans } from '../../actions';\n\nconst ViewLoanScreen = (props) => {\n\n    const history = useHistory()\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [modalInfo, setModalInfo] = useState({})\n\n    // Toggle method for the modal.\n    const toggle = () => {\n        setIsModalOpen(!isModalOpen)\n    }\n\n    // Fetching the loans in case the loans array is empty. Could be helpful\n    // in cases when the view page is directly opened.\n    useEffect(() => {\n        if(props.loans.length === 0) {\n            return props.fetchLoans()\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const _renderBackButton = () => {\n        return (\n            <div className=\"d-flex justify-content-start w-100\">\n                <Button \n                    onClick={() => history.push(\"/home\")}\n                    style={{width: \"5%\", marginLeft: \"10px\"}}\n                    className=\"mt-3\"\n                >\n                    Back\n                </Button>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"d-flex flex-column h-100 w-100\">\n            { _renderBackButton() }\n\n            {/* Show some message in case there is no result to be showed to user. */}\n            {\n                props.loans.length === 0 ? \n                    <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                        NO PREVIOUS RECORD FOUND\n                    </div>\n                    :\n                    null\n            }\n\n            <DetailModal\n                isOpen={isModalOpen}\n                toggle={toggle}\n                info={modalInfo}\n            />\n\n            <Row className=\"mt-4 mx-3\">\n                {\n                    props.loans.map((_current, idx) => {\n                        return <LoanCard \n                                info={_current} \n                                key={idx} \n                                toggleModal={toggle}\n                                setModalInfo={setModalInfo}\n                               />\n                    })\n                }\n            </Row>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    loans: selectLoans(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchLoans: () => dispatch(FetchLoans.request())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewLoanScreen)\n","import React, { useEffect } from 'react'\nimport { Route, useHistory } from 'react-router'\nimport jwt_decode from \"jwt-decode\";\nimport { getUserAccessToken } from '../helpers/localStorage';\n\nconst PrivateRoute = (props) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // Check if the user access token is invalid. If invalid, redirecting to the login screen.\n        try {\n            const decoded = jwt_decode(getUserAccessToken())\n            console.log(decoded)\n        } catch (error) {\n            history.push(\"/login\")\n        }\n\n    }, [history])\n\n    return (\n        <Route \n            exact={props.exact}\n            path={props.path}\n            component={props.component}\n        />\n    )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Switch } from 'react-router'\nimport ApplyLoanScreen from '../screens/ApplyLoan'\nimport HomeScreen from '../screens/Home'\nimport ViewLoanScreen from '../screens/ViewLoan'\nimport PrivateRoute from './PrivateRoute'\n\nconst MainRouteSwitch = (props) => {\n    return (\n        <Switch>\n            <PrivateRoute \n                exact\n                path=\"/\"\n                component={HomeScreen}\n            />\n\n            <PrivateRoute \n                exact\n                path=\"/home\"\n                component={HomeScreen}\n            />\n\n            <PrivateRoute \n                exact\n                path=\"/apply\"\n                component={ApplyLoanScreen}\n            />\n\n            <PrivateRoute \n                exact\n                path=\"/view\"\n                component={ViewLoanScreen}\n            />\n        </Switch>\n    )\n}\n\nexport default MainRouteSwitch\n","import React from 'react'\n// import { Route } from 'react-router'\n// import LoginScreen from '../screens/Login'\n\nimport AuthRouteSwitch from './AuthRouteSwitch'\nimport MainRouteSwitch from './MainRouteSwitch'\n\nconst MainRoute = () => {\n    return (\n        <React.Fragment>\n            <AuthRouteSwitch />\n            <MainRouteSwitch />\n        </React.Fragment>\n    )\n}\n\nexport default MainRoute\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\nimport ReduxThunk from \"redux-thunk\"\nimport LoanReducer from \"./loanReducer\";\n\nexport const reducers = {\n    loans: LoanReducer\n}\n\nconst app = combineReducers(reducers);\n\nconst rootReducer = (state, action) => {\n    return app(state, action)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk))\n\nexport default store","import React from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Provider } from 'react-redux'\nimport MainRoute from './MainRoute'\nimport store from '../reducers'\n\nconst MainApp = () => {\n    return (\n        <Provider store={store}>\n            <Router>\n                <MainRoute />\n            </Router>\n        </Provider>\n    )\n}\n\nexport default MainApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './routes/MainApp';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <MainApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}